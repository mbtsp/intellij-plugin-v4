--- src/main/java/org/apache/xmlgraphics/xmp/XMPHandler.java
+++ src/main/java/org/apache/xmlgraphics/xmp/XMPHandler.java
@@ -216,20 +223,17 @@ public class XMPHandler extends DefaultHandler {
         } else if (XMPConstants.RDF_NAMESPACE.equals(uri) && !"value".equals(localName)) {
             if ("li".equals(localName)) {
                 XMPStructure struct = getCurrentStructure();
+                String parseType = atts.getValue("rdf:parseType");
                 if (struct != null) {
                     //Pop the structure
                     this.contextStack.pop();
                     this.nestingInfoStack.pop();
-                    getCurrentArray(true).add(struct);
+                    getCurrentArray(true).add(struct, null, parseType);
                 } else {
                     String s = content.toString().trim();
                     if (s.length() > 0) {
                         String lang = atts.getValue(XMPConstants.XML_NS, "lang");
-                        if (lang != null) {
-                            getCurrentArray(true).add(s, lang);
-                        } else {
-                            getCurrentArray(true).add(s);
-                        }
+                        getCurrentArray(true).add(s, lang, parseType);
                     }
                 }
             } else if ("Description".equals(localName)) {
@@ -271,7 +275,9 @@ public class XMPHandler extends DefaultHandler {
             if (prop.getName() == null) {
                 throw new IllegalStateException("No content in XMP property");
             }
-            assert getCurrentProperties() != null : "no current property";
+            if (getCurrentProperties() == null) {
+                startThinStructure();
+            }
             getCurrentProperties().setProperty(prop);
         }
 
