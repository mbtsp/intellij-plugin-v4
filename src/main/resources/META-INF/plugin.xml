<idea-plugin>
    <id>com.my.antlr.tool</id>
    <name>ANTLR v4-Tool</name>
    <version>will be replaced by gradle</version>
    <vendor email="zoulejiu@gmail.com" url="https://github.com/mbtsp/intellij-plugin-v4">ANTLR Project</vendor>

    <description><![CDATA[
  <p>
      This plugin is for ANTLR v4 grammars and includes ANTLR 4.13.1. It works with
      2020.3 and above.  It should work in other JetBrains IDEs.
     </p>

     <ul>
     <li> syntax highlighting
     <li> syntax error checking
     <li> semantic error checking
     <li> navigation window
     <li> goto-declaration
     <li> find usages
     <li> rename tokens
     <li> rename rules
     <li> comment grammar rule lines with meta-/ (1.7)
     <li> save parse trees as svg/jpg/png; right click in parse tree view (1.9)
     <li> grammar/comment folding (1.7)
     <li> generates parser code; shortcut (ctrl-shift-G / meta-shift-G) but it's in Tools menu and popups.
     <li> code completion for tokens, rule names;
     <li> finds tokenVocab option for code gen if there is a tokenVocab option, don't warn about implicit tokens.
     <li> handles separate parsers and lexers like TParser.g4 and TLexer.g4 (1.7)
     <li> parse tree nodes show the alternative number the parser chose to match that node. (1.7)
     <li> has live grammar interpreter for grammar preview. Right click on rule and say "Test ANTLR Rule". <b>Please noteThat actions and semantic predicates in the grammar or not executed during this preview!</b>
     <li> view parse trees in hierarchy (sideways tree) view. (1.8)
     <li> can view parse trees for input matched in more than one way (ambiguities) (1.7)
     <li> can view lookahead trees to show how input directed ANTLR to match a particular alternative (1.7)
	<li> changes to grammar seen in parse tree upon save of grammar.
	<li> works with all JetBrains IDEs (1.8)
	<li> refactoring: extract rule, inline rule (1.8), dup rule to make refs unique
     </ul>

      <p>Generates code in <project-root>/gen/package/YourGrammarRecognizer.java
      unless you override in the configuration dialog.
      Shortcut to generate parsers is ctrl-shift-G / meta-shift-G but it's in Tools menu, popups.

      Code completion for tokens, rule names. finds tokenVocab option for code gen
          if there is a tokenVocab option, don't warn about implicit tokens.
          shortcut conflicted with grammar-kit plugin. Has live grammar interpreter
          for grammar preview. Right click on rule and say "Test ANTLR Rule".
          Changes to grammar seen in parse tree upon save of grammar.
  <p>
          You can configure the ANTLR tool options per grammar file; right-click
          in a grammar or on a grammar element within the structured view.
          When you change and save a grammar, it automatically builds with ANTLR
          in the background according to the preferences you have set.  ANTLR
          tool errors appear in a console you can opened by clicking on a button
          in the bottom tab.
  <p>
          You can use the ctrl-key while moving the mouse and it will show you
          token information in the preview editor box via tooltips.

  <p>
          Errors within the preview editor are now highlighted with tooltips
          and underlining just like a regular editor window. The difference
          is that this window's grammar is specified in your grammar file.

<p>See <a href="https://github.com/mbtsp/intellij-plugin-v4/blob/master/README.md">README.md</a>
for more details.

<p>
For really big files and slow grammars, there is an appreciable delay when displaying the parse tree or profiling information.

<p>
<a href="https://github.com/mbtsp/intellij-plugin-v4">Github source</a>
      ]]></description>

    <change-notes><![CDATA[
	<ul>
	    <li>Time column sorted as string when â€œShow expert columns" selected (<a href="https://github.com/antlr/intellij-plugin-v4/issues/655">#655</a>)</li>
	    <li>Go To -> Declaration or Usages from declaration should not include the declaration (<a href="https://github.com/antlr/intellij-plugin-v4/issues/629">#629</a>)</li>
	    <li>NullPointer in antlr.intellij.plugin (<a href="https://github.com/antlr/intellij-plugin-v4/issues/627">#627</a>)</li>
	    <li>Exception in plugin ANTLR v4(1.20) on IntelliJ IDEA 2023.1.3 (<a href="https://github.com/antlr/intellij-plugin-v4/issues/650">#650</a>)</li>
	    <li>Structure view shows "loading ..." but nothing comes up (<a href="https://github.com/antlr/intellij-plugin-v4/issues/659">#659</a>)</li>
    </ul>
	 See the complete list of <a href="https://github.com/antlr/intellij-plugin-v4/issues?q=milestone%3A1.22+is%3Aclosed">fixed issues</a>.
      ]]>
    </change-notes>

    <depends>com.intellij.modules.lang</depends>
    <actions>
        <action id="antlr.new.Generate" class="com.antlr.plugin.actions.GenerateParserAction"
                text="Generate ANTLR Recognizer">
            <keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>
            <add-to-group group-id="ToolsMenu" anchor="before"
                          relative-to-action="ExternalToolsGroup" />
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="antlr.new.Configure" class="com.antlr.plugin.actions.ConfigureANTLRAction"
                text="Configure ANTLR...">
            <add-to-group group-id="ToolsMenu" anchor="before"
                          relative-to-action="ExternalToolsGroup"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="antlr.new.TestRule" class="com.antlr.plugin.actions.TestRuleAction"
                text="Test ANTLR Rule">
            <add-to-group group-id="StructureViewPopupMenu" anchor="first"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </action>
        <action id="antlr.new.DefineLexerRulesForLiterals"
                class="com.antlr.plugin.actions.GenerateLexerRulesForLiteralsAction"
                text="Generate Lexer Rules for Literals"
                description="Inject lexer rules for undefined literals but leave literal in place">
            <add-to-group group-id="GenerateGroup" anchor="first"/>
        </action>
        <action id="antlr.new.InlineRule" class="com.antlr.plugin.actions.InlineRuleAction"
                text="Inline and Remove Rule">
            <keyboard-shortcut keymap="$default" first-keystroke="control alt N"/>
            <add-to-group group-id="RefactoringMenu" anchor="before" relative-to-action="Move"/>
        </action>
        <action id="antlr.new.ExtractRule"
                class="com.antlr.plugin.actions.ExtractRuleAction"
                text="Extract Rule...">
            <keyboard-shortcut keymap="$default" first-keystroke="control alt M"/>
            <add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="antlr.new.InlineRule"/>
        </action>
        <action id="antlr.new.UniquifyRuleRefs"
                class="com.antlr.plugin.actions.UniquifyRuleRefs"
                text="Make Refs to Rule Unique...">
            <add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="antlr.new.ExtractRule"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceImplementation="com.antlr.plugin.ANTLRv4PluginController"/>
        <postStartupActivity implementation="com.antlr.plugin.init.AntlrStartupActivity"/>
        <fileType id="antlr.new.fileType" name="ANTLR v4 grammar file" language="ANTLRv4-Tool" extensions="g4" fieldName="INSTANCE"
                  implementationClass="com.antlr.plugin.ANTLRv4FileType"/>
        <lang.syntaxHighlighterFactory
                implementationClass="com.antlr.plugin.ANTLRv4SyntaxHighlighterFactory"
                language="ANTLRv4-Tool" id="antlr.new.antlrHighlighterFactory"/>
        <lang.commenter id="antlr.new.lang.commenter" language="ANTLRv4-Tool" implementationClass="com.antlr.plugin.ANTLRv4Commenter"/>
        <indexPatternBuilder id="antlr.new.index.pattern.builder" implementation="com.antlr.plugin.psi.ANTLRv4IndexPatternBuilder"/>
        <lang.braceMatcher id="antlr.new.lang,brace.matcher" language="ANTLRv4-Tool"
                           implementationClass="com.antlr.plugin.editor.ANTLRv4BraceMatcher"/>
        <colorSettingsPage id="antlr.new.color.setting.page" implementation="com.antlr.plugin.configdialogs.ANTLRv4ColorsPage"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/ANTLRv4Default.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/ANTLRv4Darcula.xml"/>
        <lang.parserDefinition id="antlr.new.lang.parser.definition" language="ANTLRv4-Tool"
                               implementationClass="com.antlr.plugin.ANTLRv4ParserDefinition"/>
        <lang.ast.factory id="antlr.new.lang.ast.factory" language="ANTLRv4-Tool" implementationClass="com.antlr.plugin.ANTLRv4ASTFactory"/>
        <lang.psiStructureViewFactory id="antlr.new.lang.psi.structure.view.factory" language="ANTLRv4-Tool"
                                      implementationClass="com.antlr.plugin.structview.ANTLRv4StructureViewFactory"/>
        <lang.foldingBuilder id="antlr.new.lang.folding.builder" language="ANTLRv4-Tool"
                             implementationClass="com.antlr.plugin.folding.ANTLRv4FoldingBuilder"/>
        <iconProvider id="antlr.new.icon.provider"  implementation="com.antlr.plugin.ANTLRv4IconProvider"/>

        <externalAnnotator  id="antlr.new.external.annotator" language="ANTLRv4-Tool" implementationClass="com.antlr.plugin.ANTLRv4ExternalAnnotator"/>
        <lang.findUsagesProvider id="antlr.new.lang.find.useges.provider" language="ANTLRv4-Tool"
                                 implementationClass="com.antlr.plugin.ANTLRv4FindUsagesProvider"/>

        <defaultLiveTemplates file="/liveTemplates/lexer/user.xml"/>
        <liveTemplateContext id="antlr.new.live.template.antlr.gerner.context" implementation="com.antlr.plugin.templates.ANTLRGenericContext"
                             contextId="ANTLR-Tool"/>
        <liveTemplateContext id="antlr.new.live.template.outside.rule.context" implementation="com.antlr.plugin.templates.OutsideRuleContext"
                             contextId="ANTLR_OUTSIDE-Tool"/>
        <projectConfigurable groupId="language"
                             id="antlr.new.intellij.plugin.configdialogs.ANTLRv4ProjectSettings"
                             displayName="ANTLR V4 Default Project Settings"
                             instance="com.antlr.plugin.configdialogs.ANTLRv4ProjectSettings"/>
        <projectService id="antlr.new.antlr.grammar.propertioes.component"
                serviceImplementation="com.antlr.plugin.configdialogs.ANTLRv4GrammarPropertiesComponent"/>
        <lang.refactoringSupport  id="antlr.new.refactoring.support" language="ANTLRv4-Tool"
                                 implementationClass="com.antlr.plugin.refactor.ANTLRv4RefactoringSupport"/>
        <toolWindow factoryClass="com.antlr.plugin.toolwindow.PreViewToolWindow" id="Antlr(new) Preview"
                    anchor="bottom"/>
        <toolWindow factoryClass="com.antlr.plugin.toolwindow.ConsoleToolWindow" id="Antlr(new) Console"
                    anchor="bottom"/>
        <notificationGroup displayType="BALLOON" id="antlr.new.notify.group"/>
        <errorHandler id="antlr.new.error.report" implementation="com.antlr.report.AnltrErrorReportSubmitter"/>
    </extensions>
</idea-plugin>
